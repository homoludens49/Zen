[{"D:\\Code Projects\\2020\\Zen\\client1\\src\\index.js":"1","D:\\Code Projects\\2020\\Zen\\client1\\src\\App.js":"2","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\layout\\Nav.js":"3","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\layout\\Dashboard.js":"4","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Products.js":"5","D:\\Code Projects\\2020\\Zen\\client1\\src\\store.js":"6","D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\index.js":"7","D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\stock.js":"8","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\types.js":"9","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\stock.js":"10","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\FileUpload.js":"11","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Orders.js":"12","D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\orders.js":"13","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\orders.js":"14","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\shops\\Smartmom.js":"15","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\shops\\Alilo.js":"16","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Invoice.js":"17","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Invoicealilo.js":"18","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Totals.js":"19","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Stats.js":"20","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesOverview.js":"21","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\StockOverview.js":"22","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Expenses.js":"23","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\expenses.js":"24","D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\expenses.js":"25","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesYearlyOverview.js":"26","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesMonthlyOverview.js":"27","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Movements.js":"28"},{"size":198,"mtime":1606979788446,"results":"29","hashOfConfig":"30"},{"size":1318,"mtime":1641137274089,"results":"31","hashOfConfig":"30"},{"size":876,"mtime":1640551523158,"results":"32","hashOfConfig":"30"},{"size":1505,"mtime":1641110528066,"results":"33","hashOfConfig":"30"},{"size":5289,"mtime":1641127739784,"results":"34","hashOfConfig":"30"},{"size":407,"mtime":1607003168516,"results":"35","hashOfConfig":"30"},{"size":217,"mtime":1640611095761,"results":"36","hashOfConfig":"30"},{"size":1177,"mtime":1640593483191,"results":"37","hashOfConfig":"30"},{"size":474,"mtime":1640551748181,"results":"38","hashOfConfig":"30"},{"size":2205,"mtime":1638551371009,"results":"39","hashOfConfig":"30"},{"size":4398,"mtime":1640611271856,"results":"40","hashOfConfig":"30"},{"size":969,"mtime":1640454650052,"results":"41","hashOfConfig":"30"},{"size":1007,"mtime":1641125828507,"results":"42","hashOfConfig":"30"},{"size":823,"mtime":1641125066229,"results":"43","hashOfConfig":"30"},{"size":1032,"mtime":1638551371014,"results":"44","hashOfConfig":"30"},{"size":1031,"mtime":1638551371014,"results":"45","hashOfConfig":"30"},{"size":5366,"mtime":1638551371010,"results":"46","hashOfConfig":"30"},{"size":5301,"mtime":1638551371011,"results":"47","hashOfConfig":"30"},{"size":2175,"mtime":1638551371012,"results":"48","hashOfConfig":"30"},{"size":883,"mtime":1641125015645,"results":"49","hashOfConfig":"30"},{"size":6116,"mtime":1641125217638,"results":"50","hashOfConfig":"30"},{"size":6151,"mtime":1640527327433,"results":"51","hashOfConfig":"30"},{"size":94121,"mtime":1640704893161,"results":"52","hashOfConfig":"30"},{"size":920,"mtime":1640704899463,"results":"53","hashOfConfig":"30"},{"size":656,"mtime":1640611026274,"results":"54","hashOfConfig":"30"},{"size":6189,"mtime":1641125459315,"results":"55","hashOfConfig":"30"},{"size":6234,"mtime":1641125843708,"results":"56","hashOfConfig":"30"},{"size":2197,"mtime":1641137736369,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"m9dyou",{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"60"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"60"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"60"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"60"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"60"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"60"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"60"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"60"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"60"},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"60"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"60"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"60"},"D:\\Code Projects\\2020\\Zen\\client1\\src\\index.js",[],["136","137"],"D:\\Code Projects\\2020\\Zen\\client1\\src\\App.js",["138","139"],"import React ,{ Fragment , useEffect}from 'react';\r\nimport './App.css';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nimport Nav from './components/layout/Nav'\r\nimport Dashboard from './components/layout/Dashboard';\r\nimport Orders from './components/Orders';\r\nimport Invoice from './components/Invoice';\r\nimport Invoicealilo from './components/Invoicealilo';\r\nimport Expenses from './components/Expenses'\r\nimport Movements from './components/Movements'\r\n//Redux\r\nimport { Provider } from 'react-redux'\r\nimport store from './store'\r\nimport {getStock , getTotals} from './actions/stock'\r\n\r\nconst App = ()=> {\r\n\r\n  useEffect(()=> {\r\n    store.dispatch(\r\n      getStock()\r\n      )\r\n  }, [])\r\n  return(  \r\n    <Provider store={store}>\r\n        <Router>\r\n          <Fragment>\r\n            <Nav />\r\n            <Route path=\"/\" exact component={Dashboard} />\r\n            <Route path=\"/orders\" exact component={Orders} />\r\n            <Route path=\"/expenses\" exact component={Expenses} />\r\n            <Route path=\"/movements\" exact component={Movements}/>\r\n            <Route path=\"/invoice\" exact component={Invoice} />\r\n            <Route path=\"/invoicealilo\" exact component={Invoicealilo} />\r\n          </Fragment>\r\n      </Router>\r\n    </Provider>\r\n  )\r\n}\r\n\r\n\r\n \r\n\r\nexport default App;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\layout\\Nav.js",["140"],"import React, { Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Nav = () => {\r\n    return (\r\n       <ul>\r\n           <li>\r\n             <Link to=\"/\" className=\"nav-link\">\r\n                 Dashboard\r\n             </Link>  \r\n           </li>\r\n           <li>\r\n             <Link to=\"orders\" className=\"nav-link\">\r\n                 Orders\r\n             </Link>  \r\n           </li>\r\n           <li>\r\n             <Link to=\"movements\" className=\"nav-link\">\r\n                 Movements\r\n             </Link>  \r\n           </li>\r\n           <li>\r\n             <Link to=\"products\" className=\"nav-link\">\r\n                 Products\r\n             </Link>  \r\n           </li>\r\n           <li>\r\n             <Link to=\"expences\" className=\"nav-link\">\r\n             Expences\r\n             </Link>  \r\n           </li>\r\n       </ul>\r\n    )\r\n}\r\n\r\nexport default Nav","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\layout\\Dashboard.js",["141","142","143","144","145","146"],"import React, { Component, Fragment, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport Products from \"../Products\";\r\nimport Totals from \"../Totals\";\r\nimport Stats from \"../Stats\";\r\nimport FileUpload from \"../FileUpload\";\r\nimport stock from \"../../reducers/stock\";\r\nimport { getTotals } from \"../../actions/stock\";\r\nimport { getStats } from \"../../actions/orders\";\r\nimport { Button } from \"@mui/material\";\r\n\r\nconst Dashboard = ({ stock, totals, stats, getTotals, getStats }) => {\r\n  useEffect(() => {\r\n    getTotals();\r\n    getStats();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <Button variant=\"contained\" color=\"secondary\">\r\n        Contained\r\n      </Button>\r\n      <h1 className=\"large text-primary\"> Dashboard </h1>\r\n      <p className=\"lead\">\r\n        <i className=\"fas fa-user\"></i>Welcome\r\n      </p>\r\n      <FileUpload />\r\n      <Totals totals={totals}></Totals>\r\n      <Stats stats={stats} totals={totals}></Stats>\r\n      <Products stock={stock.stock}></Products>\r\n    </div>\r\n  );\r\n};\r\nDashboard.propTypes = {\r\n  stock: PropTypes.array.isRequired,\r\n  totals: PropTypes.array.isRequired,\r\n  getTotals: PropTypes.func.isRequired,\r\n  getStats: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  stock: state.stock,\r\n  totals: state.stock.totals,\r\n  stats: state.orders.stats,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getTotals,getStats })(Dashboard);\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Products.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\store.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\index.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\stock.js",["147"],"import {\r\n    GET_STOCK,\r\n    STOCK_ERROR,\r\n    CLEAR_STOCK,\r\n    UPDATE_STOCK,\r\n    GET_TOTALS\r\n} from '../actions/types'\r\n\r\nconst initialState = {\r\n    stock: [{model:1,\r\n    quanity:1,\r\n    warehouse:'test'}],\r\n    totals:[{quantity:0,\r\n        sellprice:0,\r\n        buyprice:0,\r\n        revenueNoVat:0},\r\n        {quantity:0,\r\n            sellprice:0,\r\n            buyprice:0,\r\n            revenueNoVat:0},],\r\n    error: {}\r\n}\r\n\r\nexport default function(state = initialState, action){\r\n    const {type, payload} = action\r\n\r\n    switch(type){\r\n        case GET_STOCK: \r\n        return{\r\n            ...state,\r\n            stock: payload\r\n        }\r\n        case UPDATE_STOCK: \r\n        return{\r\n            ...state,\r\n            error: payload\r\n        }\r\n        case STOCK_ERROR:\r\n            return{\r\n                ...state,\r\n                error: payload\r\n            }\r\n        case CLEAR_STOCK:\r\n            return {\r\n                ...state,\r\n                stock: null\r\n            }\r\n        case GET_TOTALS:\r\n        return {\r\n             ...state,\r\n             totals: payload\r\n        }\r\n        default: \r\n            return state           \r\n    }\r\n\r\n}","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\types.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\stock.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\FileUpload.js",["148"],"import React, {Fragment, useState} from 'react'\r\nimport axios from 'axios'\r\nconst FileUpload = () => {\r\n\r\n    const [file, setFile] = useState('')\r\n    const [filename, setFilename] = useState('Choose File')\r\n    const [uploadedFile, setUploadedFile] = useState({})\r\n\r\n    const onChange= e =>{\r\n        setFile(e.target.files[0])\r\n        setFilename(e.target.files[0].name)\r\n    }\r\n    const onProductSubmit = async e =>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        try {\r\n            const res = await axios.post('/uploads/productUpload', formData, {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            const {fileName, filePath} = res.data\r\n            setUploadedFile({fileName, filePath})\r\n        } catch (err) {\r\n            if(err){\r\n                if(err.response.status === 500){\r\n                    console.log('these was a problem with the server')\r\n                }else{\r\n                    console.log(err.response.data.msg)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const onOrderSubmit = async x =>{\r\n        x.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        console.log(file)\r\n        try {\r\n            const res = await axios.post('/uploads/orderUpload', formData, {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            const {fileName, filePath} = res.data\r\n            setUploadedFile({fileName, filePath})\r\n        } catch (err) {\r\n            if(err){\r\n                if(err.response.status === 500){\r\n                    console.log('these was a problem with the server')\r\n                }else{\r\n                    console.log(err.response.data.msg)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const onExpenseSubmit = async e =>{\r\n        e.preventDefault();\r\n        const formData = new FormData()\r\n        formData.append('file', file)\r\n        try {\r\n            const res = await axios.post('/uploads/expensesUpload', formData, {\r\n                headers:{\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n            })\r\n            const {fileName, filePath} = res.data\r\n            setUploadedFile({fileName, filePath})\r\n        } catch (err) {\r\n            if(err){\r\n                if(err.response.status === 500){\r\n                    console.log('these was a problem with the server')\r\n                }else{\r\n                    console.log(err.response.data.msg)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <div>\r\n            <form onSubmit={onProductSubmit}>\r\n                <div>\r\n                    <h3>Upload Products</h3>\r\n                    <input type=\"file\" id=\"productFile\"\r\n                    onChange={onChange}></input>\r\n                    <label className='custom-file-label'>{filename}</label>\r\n                </div>\r\n                <input type='submit'\r\n                value='Upload'\r\n                className='btn btn-primary'>\r\n                </input>\r\n            </form>\r\n            </div>\r\n           <div>\r\n           <form onSubmit={onOrderSubmit}>\r\n                <div>\r\n                <h3>Upload Orders</h3>\r\n                    <input type=\"file\" id=\"orderFile\"\r\n                    onChange={onChange}></input>\r\n                    <label className='custom-file-label'>{filename}</label>\r\n                </div>\r\n                <input type='submit'\r\n                value='Upload'\r\n                className='btn btn-primary'>\r\n                </input>\r\n            </form>\r\n           </div>\r\n           <div>\r\n           <form onSubmit={onExpenseSubmit}>\r\n                <div>\r\n                <h3>Upload Expenses</h3>\r\n                    <input type=\"file\" id=\"expenseFile\"\r\n                    onChange={onChange}></input>\r\n                    <label className='custom-file-label'>{filename}</label>\r\n                </div>\r\n                <input type='submit'\r\n                value='Upload'\r\n                className='btn btn-primary'>\r\n                </input>\r\n            </form>\r\n           </div>\r\n        \r\n           \r\n        </Fragment>\r\n        \r\n    )\r\n}\r\n\r\nexport default FileUpload","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Orders.js",["149"],"import React, { Fragment, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getOrders } from \"../actions/orders\";\r\n\r\nimport Smartmom from \"../components/shops/Smartmom\";\r\nimport Alilo from \"../components/shops/Alilo\";\r\n\r\nconst Orders = ({ orders, getOrders}) => {\r\n  useEffect(() => {\r\n    getOrders();\r\n  }, []);\r\n\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <h2 className=\"my-2\">Orders</h2>\r\n      <div className=\"custom-orders\">\r\n        <h1>Smartmom</h1>\r\n        <h1>Alilo</h1>\r\n      </div>\r\n\r\n      <div className=\"custom-orders\">\r\n        <Smartmom orders={orders.orders} />\r\n        <Alilo orders={orders.orders} />\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nOrders.propTypes = {\r\n  getOrders: PropTypes.func.isRequired,\r\n  orders: PropTypes.array.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  orders: state.orders,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getOrders })(Orders);\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\orders.js",["150"],"import { GET_ORDERS, GET_STATS, ORDERS_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  stats: {\r\n    totalSales: 0.0,\r\n    totalShipping: 0.0,\r\n    totalProducts: 0.0,\r\n    totalOmniva: 0.0,\r\n    totalDPD: 0.0,\r\n    data:{\r\n      sum: 0.00,\r\n      shipping: 0.00,\r\n      productCount: 0,\r\n      costOfGoodsSold: 0.00,\r\n      totalExpenses: 0.00,\r\n      totalNet: 0.00,\r\n    }\r\n  },\r\n  orders: \r\n    [{\r\n      orderId: 1,\r\n      name: 1,\r\n      order: [{ name: \"test\" }],\r\n      link: { collection: [{ href: \"test\" }] },\r\n    }],\r\n  \r\n\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_ORDERS:\r\n      return {\r\n        ...state,\r\n        orders: payload,\r\n      };\r\n    case GET_STATS:\r\n      return {\r\n        ...state,\r\n        stats: payload,\r\n      };\r\n    case ORDERS_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n",["151","152"],"D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\orders.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\shops\\Smartmom.js",["153"],"import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Invoice from '../Invoice'\r\n\r\nconst Smartmom = ({orders}) => {\r\n    const smOrders = orders.filter(x => x.link.collection[0].href === \"https://smartmom.shop/wp-json/wc/v2/orders\"? true:false)\r\n    smOrders.sort((a,b) =>  b.orderId-a.orderId)\r\n    const smartmomOrders = smOrders.map(o => (\r\n        <tr key={o._id}>\r\n        <td>{o.orderId}</td>\r\n        <td>{o.name}</td>\r\n        <td>{o.order[0].name}</td>\r\n        <Link to={{pathname: '/invoice',\r\n        state: o}}>Show Invoice</Link>\r\n    </tr>\r\n    ))\r\n\r\n    return (\r\n    <Fragment>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Items</th>\r\n                        <th/>\r\n                    </tr>\r\n                </thead>\r\n        <tbody>{smartmomOrders}</tbody>\r\n            </table>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default Smartmom","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\shops\\Alilo.js",["154"],"import React, {Fragment} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport Invoice from '../Invoicealilo'\r\n\r\nconst Alilo = ({orders}) => {\r\n    \r\n    const alOrders = orders.filter(x => x.link.collection[0].href === \"https://alilo.lv/wp-json/wc/v2/orders\"? true:false)\r\n    alOrders.sort((a,b) =>  b.orderId-a.orderId)\r\n    const aliloOrders = alOrders.map(o => (\r\n        <tr key={o._id}>\r\n        <td>{o.orderId}</td>\r\n        <td>{o.name}</td>\r\n        <td>{o.order[0].name}</td>\r\n        <Link to={{pathname: '/invoicealilo',\r\n        state: o}}>Show Invoice</Link>\r\n    </tr>\r\n    ))\r\n\r\n    return (\r\n    <Fragment>\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>Id</th>\r\n                        <th>Name</th>\r\n                        <th>Items</th>\r\n                        <th/>\r\n                    </tr>\r\n                </thead>\r\n        <tbody>{aliloOrders}</tbody>\r\n            </table>\r\n    </Fragment>\r\n    )\r\n}\r\n\r\nexport default Alilo","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Invoice.js",["155","156","157"],"import React, {useState, useEffect} from 'react'\r\nimport Moment from 'moment';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nclass Invoice extends React.Component {\r\n\r\n   \r\n    render =() => {\r\n        \r\n        const createAndDownloadPdf = (state) => {\r\n            \r\n             axios.post('/createpdf/create-pdf', state)\r\n               .then(() => axios.get('/createpdf/fetch-pdf', { responseType: 'blob' }))\r\n               .then((res) => {\r\n                 const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n     \r\n                 saveAs(pdfBlob, 'newPdf.pdf');\r\n               })\r\n           }\r\n\r\n        const {order} = this.props.location.state  \r\n        \r\n        const item = order.map(i=>\r\n            (<tr key={i.id}>\r\n               <td>{i.name}</td>\r\n               <td>{i.quantity}</td>\r\n               <td>{i.price.toFixed(2)}</td>\r\n               <td>{(i.price*0.21).toFixed(2)}</td>\r\n               <td>{(i.price+(i.price*0.21)).toFixed(2)}</td>\r\n                <td>{(i.price+(i.price*0.21)).toFixed(2)*i.quantity}</td>\r\n              \r\n            </tr>\r\n            ))\r\n\r\n        const shippingNoVat = (this.props.location.state.orderShippingAmount/1.21).toFixed(2)\r\n        const shippingVat = (this.props.location.state.orderShippingAmount-this.props.location.state.orderShippingAmount/1.21).toFixed(2)\r\n        const shipping = (\r\n        <tr>\r\n            <td>Piegade:</td>\r\n            <td>1</td>\r\n            <td>€ {shippingNoVat}</td>\r\n            <td>€ {shippingVat}</td>\r\n            <td>€ {this.props.location.state.orderShippingAmount.toFixed(2)}</td>\r\n        </tr>)\r\n\r\n        const total = Number(this.props.location.state.total)\r\n        const summaArVardiem = function(total){\r\n\r\n        }\r\n\r\n        return (\r\n            \r\n        <div className='invoice-container'>\r\n            <button onClick={(e)=>createAndDownloadPdf(this.props.location.state)}>Create PDF</button>\r\n            <p>Rēķins / Pavadzīme Nr. {this.props.location.state.orderId}</p>\r\n            <br></br>\r\n            <p>Pasutijuma Datums:  {Moment(this.props.location.state.orderDate).format('DD-MMMM-YYYY')}</p>\r\n            <br></br>\r\n            <div className='rekviziti'>\r\n                <p> Piegādātājs:   Sia \"SmartMom\"   <br/>     \t\t\t\t\r\n                    Faktiska adrese / Juridiskā adrese:\t<br/> \t\t\t\r\n                    AS \"SEB banka\", Bankas kods: UNLALV2X,\t<br/> \t\t\t\r\n                    AS “Swedbank\", Bankas kods: HABALV22,\t<br/> \t\t\t\r\n                    Tālr. +37122044652, +37125410262\t<br/> \t\t\t\r\n                    E-Pasts: smartmominfo@gmail.com\t\t<br/> \t\t\r\n                </p>\r\n                <p>\r\n                PVN Reģistrācijas Nr. LV40203072022 <br/> \r\n                Dambja iela 3A, Rīga, LV-1005<br/> \r\n                Konta Nr.: LV83UNLA0055000114035<br/> \r\n                Konta Nr.: LV23HABA0551043798886<br/> \r\n                </p>\r\n            </div>\r\n            <br></br>\r\n            <div className='clienta-rekviziti'>\r\n                <p> Preču saņēmējs:    <br/>     \t\t\t\t\r\n                    Piegādes adrese:  \t<br/> \t\t\t\r\n                    Tālr.:<br/> \t\t\t\r\n                    E-pasts:<br/> \t\t\t\r\n                    Piezimes<br/> \t\t\t\t\t\r\n                </p>\r\n                <p>\r\n                {this.props.location.state.name} <br/> \r\n                {this.props.location.state.addressShipping}<br/> \r\n                {this.props.location.state.phone}<br/> \r\n                {this.props.location.state.email}<br/>  \r\n                {this.props.location.state.customerNote}<br/>  \r\n                </p>\r\n            </div>\r\n            <br/>\r\n            <div className='invoice-table'>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nosaukums</th>\r\n                            <th>Daudzums gab.</th>\r\n                            <th>Cena bez PVN, EUR</th>\r\n                            <th>PVN 21%</th>\r\n                            <th>Cena ar PVN, EUR</th>\r\n                            <th>Summa ar PVN, EUR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{item}</tbody>\r\n                    <tbody>{shipping}</tbody>\r\n                </table>\r\n                </div>\r\n                <div className=\"summa-table\">\r\n                            <p>\r\n                            Kopā bez PVN:<br/>\r\n                            PVN 21%(LV):<br/>\r\n                            Kopā: <br/>\r\n                            Summa ar vārdiem:<br/>\r\n                            </p>\r\n                            <p>\r\n                            € {(Number(this.props.location.state.total)/1.21).toFixed(2)}<br/> \r\n                            € {(Number(this.props.location.state.total)-(Number(this.props.location.state.total)/1.21)).toFixed(2)}<br/> \r\n                            € {Number(this.props.location.state.total)}<br/>  \r\n                            {summaArVardiem}<br/>  \r\n                            </p>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <h3>RĒĶINS SAGATAVOTS ELEKTRONISKI UN IR DERĪGS BEZ PARAKSTA</h3>\r\n                </div>\r\n                \r\n        </div>\r\n    \r\n\r\n\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Invoice","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Invoicealilo.js",["158","159","160"],"import React, {useState, useEffect} from 'react'\r\nimport Moment from 'moment';\r\nimport axios from 'axios';\r\nimport { saveAs } from 'file-saver';\r\n\r\nclass Invoice extends React.Component {\r\n    render =() => {   \r\n        const createAndDownloadPdf = (state) => {\r\n            \r\n             axios.post('/createpdf/create-pdf', state)\r\n               .then(() => axios.get('/createpdf/fetch-pdf', { responseType: 'blob' }))\r\n               .then((res) => {\r\n                 const pdfBlob = new Blob([res.data], { type: 'application/pdf' });\r\n     \r\n                 saveAs(pdfBlob, 'newPdf.pdf');\r\n               })\r\n           }\r\n        const {order} = this.props.location.state  \r\n        const item = order.map(i=>\r\n            (<tr key={i.id}>\r\n               <td>{i.name}</td>\r\n               <td>{i.quantity}</td>\r\n               <td>{(i.price-(i.price*0.21)).toFixed(2)}</td>\r\n               <td>{(i.price*0.21).toFixed(2)}</td>\r\n               <td>{i.price.toFixed(2)}</td>\r\n                <td>{i.price.toFixed(2)*i.quantity}</td>\r\n              \r\n            </tr>\r\n            ))\r\n        const shippingNoVat = (this.props.location.state.orderShippingAmount/1.21).toFixed(2)\r\n        const shippingVat = (this.props.location.state.orderShippingAmount-this.props.location.state.orderShippingAmount/1.21).toFixed(2)\r\n        const shipping = (\r\n        <tr>\r\n            <td>Piegade:</td>\r\n            <td>1</td>\r\n            <td>€ {shippingNoVat}</td>\r\n            <td>€ {shippingVat}</td>\r\n            <td>€ {this.props.location.state.orderShippingAmount.toFixed(2)}</td>\r\n        </tr>)\r\n        const total = Number(this.props.location.state.total)\r\n        const summaArVardiem = function(total){\r\n        }\r\n        return (\r\n        <div className='invoice-container'>\r\n            <button onClick={(e)=>createAndDownloadPdf(this.props.location.state)}>Create PDF</button>\r\n            <p>Rēķins / Pavadzīme Nr. {this.props.location.state.orderId}</p>\r\n            <br></br>\r\n            <p>Pasutijuma Datums:  {Moment(this.props.location.state.orderDate).format('DD-MMMM-YYYY')}</p>\r\n            <br></br>\r\n            <div className='rekviziti'>\r\n                <p> Piegādātājs:   Sia \"SmartMom\"   <br/>     \t\t\t\t\r\n                    Faktiska adrese / Juridiskā adrese:\t<br/> \t\t\t\r\n                    AS \"SEB banka\", Bankas kods: UNLALV2X,\t<br/> \t\t\t\r\n                    AS “Swedbank\", Bankas kods: HABALV22,\t<br/> \t\t\t\r\n                    Tālr. +37122044652, +37125410262\t<br/> \t\t\t\r\n                    E-Pasts: smartmominfo@gmail.com\t\t<br/> \t\t\r\n                </p>\r\n                <p>\r\n                PVN Reģistrācijas Nr. LV40203072022 <br/> \r\n                Dambja iela 3A, Rīga, LV-1005<br/> \r\n                Konta Nr.: LV83UNLA0055000114035<br/> \r\n                Konta Nr.: LV23HABA0551043798886<br/> \r\n                </p>\r\n            </div>\r\n            <br></br>\r\n            <div className='clienta-rekviziti'>\r\n                <p> Preču saņēmējs:    <br/>     \t\t\t\t\r\n                    Piegādes adrese:  \t<br/> \t\t\t\r\n                    Tālr.:<br/> \t\t\t\r\n                    E-pasts:<br/> \t\t\t\r\n                    Piezimes<br/> \t\t\t\t\t\r\n                </p>\r\n                <p>\r\n                {this.props.location.state.name} <br/> \r\n                {this.props.location.state.addressShipping}<br/> \r\n                {this.props.location.state.phone}<br/> \r\n                {this.props.location.state.email}<br/>  \r\n                {this.props.location.state.customerNote}<br/>  \r\n                </p>\r\n            </div>\r\n            <br/>\r\n            <div className='invoice-table'>\r\n                <table className=\"table\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Nosaukums</th>\r\n                            <th>Daudzums gab.</th>\r\n                            <th>Cena bez PVN, EUR</th>\r\n                            <th>PVN 21%</th>\r\n                            <th>Cena ar PVN, EUR</th>\r\n                            <th>Summa ar PVN, EUR</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>{item}</tbody>\r\n                    <tbody>{shipping}</tbody>\r\n                </table>\r\n                </div>\r\n                <div className=\"summa-table\">\r\n                            <p>\r\n                            Kopā bez PVN:<br/>\r\n                            PVN 21%(LV):<br/>\r\n                            Kopā: <br/>\r\n                            Summa ar vārdiem:<br/>\r\n                            </p>\r\n                            <p>\r\n                            € {(Number(this.props.location.state.total)/1.21).toFixed(2)}<br/> \r\n                            € {(Number(this.props.location.state.total)-(Number(this.props.location.state.total)/1.21)).toFixed(2)}<br/> \r\n                            € {Number(this.props.location.state.total)}<br/>  \r\n                            {summaArVardiem}<br/>  \r\n                            </p>\r\n                </div>\r\n                <br></br>\r\n                <div>\r\n                    <h3>RĒĶINS SAGATAVOTS ELEKTRONISKI UN IR DERĪGS BEZ PARAKSTA</h3>\r\n                </div>\r\n                \r\n        </div>\r\n    \r\n\r\n\r\n\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nexport default Invoice","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Totals.js",["161"],"import React, { Fragment } from 'react'\r\n\r\nconst Totals = ({totals}) => {\r\n   \r\n\r\n    return (\r\n        <Fragment>\r\n            \r\n            <h1>Totals</h1>\r\n        <div class=\"cotainer \">\r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div class=\"card border-info mb-3 mt-2\">\r\n                        <h6 class=\"card-title\">Total Stock Quantity</h6>\r\n                        <p class=\"card-text\">{totals[0].quantity}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"card border-info mb-3 mt-2\">\r\n                        <h6 class=\"card-title\">Total Stock in Cash Retail</h6>\r\n                        <p class=\"card-text\">EUR {totals[0].sellprice.toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"card border-info mb-3 mt-2\">\r\n                        <h6 class=\"card-title\">Total Stock in Cash Purchase</h6>\r\n                        <p class=\"card-text\">EUR {totals[0].buyprice.toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>    \r\n            <div class=\"row\">\r\n                <div class=\"col\">\r\n                    <div>\r\n                        <h6 class=\"card-title\"></h6>\r\n                        <p class=\"card-text\"></p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"card border-info mb-3 mt-2\">\r\n                        <h6 class=\"card-title\">Retail Revenue without VAT</h6>\r\n                        <p class=\"card-text\">EUR {totals[0].revenueNoVat.toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <div class=\"card border-info mb-3 mt-2\">\r\n                        <h6 class=\"card-title\">VAT</h6>\r\n                        <p class=\"card-text\">EUR {(totals[0].sellprice - totals[0].revenueNoVat).toFixed(2)}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n\r\n            \r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default Totals\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Stats.js",["162","163"],"import React, { Fragment } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport SalesOverview from \"./SalesOverview\";\r\nimport SalesMonthlyOverview from \"./SalesMonthlyOverview\";\r\nimport SalesYearlyOverview from \"./SalesYearlyOverview\";\r\nimport StockOverview from \"./StockOverview\";\r\n\r\nconst Stats = ({ stats, totals }) => {\r\n  return (\r\n    <Fragment>\r\n      <Box sx={{ flex: 1 }}>\r\n        <Grid container spacing={4}>\r\n          <SalesOverview stats={stats} />\r\n          <StockOverview totals={totals} />\r\n        </Grid>\r\n        <Grid container spacing={4}>\r\n          <SalesMonthlyOverview stats={stats} />\r\n          <SalesYearlyOverview stats={stats} />\r\n        </Grid>\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesOverview.js",["164"],"import React, { Fragment } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport PointOfSaleIcon from '@mui/icons-material/PointOfSale';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\nimport SavingsIcon from '@mui/icons-material/Savings';\r\nconst SalesOverview = ({ stats }) => {\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={0} sm={2}>\r\n        {\" \"}\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Item>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>Sales Today</Item>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <PointOfSaleIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Orders\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 52 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.totalOmniva + stats.totalDPD}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AttachMoneyIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Revenue\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.totalSales}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <SavingsIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Profit\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                      {stats.totalSales}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <MonetizationOnIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                  \r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Costs\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.totalShipping}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Item>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SalesOverview;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\StockOverview.js",["165","166"],"import React, { Fragment } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport PointOfSaleIcon from \"@mui/icons-material/PointOfSale\";\r\nimport AllInboxIcon from \"@mui/icons-material/AllInbox\";\r\nimport Inventory2Icon from \"@mui/icons-material/Inventory2\";\r\n\r\nconst StockOverview = ({ totals }) => {\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={12} sm={4}>\r\n        <Item>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>Stock Overview</Item>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <Inventory2Icon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Stock\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 52 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {totals[0].quantity}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AttachMoneyIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Stock in Cash Purchase\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {totals.totalStockInCashPurchase}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AllInboxIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Stock in Omniva\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {totals.totalStockInCashPurchase}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AllInboxIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Stock in DPD\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {totals.totalStockInCashPurchase}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Item>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default StockOverview;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Expenses.js",["167"],"import * as React from \"react\";\r\n//Redux\r\nimport { connect } from \"react-redux\";\r\nimport { createExpense, getExpenses } from \"../actions/expenses\";\r\nimport PropTypes from \"prop-types\";\r\nimport { alpha } from \"@mui/material/styles\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Button from \"@mui/material/Button\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport Table from \"@mui/material/Table\";\r\nimport TableBody from \"@mui/material/TableBody\";\r\nimport TableCell from \"@mui/material/TableCell\";\r\nimport TableContainer from \"@mui/material/TableContainer\";\r\nimport TableHead from \"@mui/material/TableHead\";\r\nimport TablePagination from \"@mui/material/TablePagination\";\r\nimport TableRow from \"@mui/material/TableRow\";\r\nimport TableSortLabel from \"@mui/material/TableSortLabel\";\r\nimport Toolbar from \"@mui/material/Toolbar\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Checkbox from \"@mui/material/Checkbox\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport Tooltip from \"@mui/material/Tooltip\";\r\nimport FormControlLabel from \"@mui/material/FormControlLabel\";\r\nimport Switch from \"@mui/material/Switch\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport FilterListIcon from \"@mui/icons-material/FilterList\";\r\nimport { visuallyHidden } from \"@mui/utils\";\r\n\r\nfunction createData(\r\n  name,\r\n  january,\r\n  february,\r\n  march,\r\n  april,\r\n  may,\r\n  june,\r\n  july,\r\n  august,\r\n  september,\r\n  october,\r\n  november,\r\n  december\r\n) {\r\n  return {\r\n    name,\r\n    january,\r\n    february,\r\n    march,\r\n    april,\r\n    may,\r\n    june,\r\n    july,\r\n    august,\r\n    september,\r\n    october,\r\n    november,\r\n    december,\r\n  };\r\n}\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\n// This method is created for cross-browser compatibility, if you don't\r\n// need to support IE11, you can use Array.prototype.sort() directly\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) {\r\n      return order;\r\n    }\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Expense Name\",\r\n  },\r\n  {\r\n    id: \"january\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"January\",\r\n  },\r\n  {\r\n    id: \"february\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"February\",\r\n  },\r\n  {\r\n    id: \"march\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"March\",\r\n  },\r\n  {\r\n    id: \"april\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"April\",\r\n  },\r\n  {\r\n    id: \"may\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"May\",\r\n  },\r\n  {\r\n    id: \"june\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"June\",\r\n  },\r\n  {\r\n    id: \"july\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"July\",\r\n  },\r\n  {\r\n    id: \"august\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"August\",\r\n  },\r\n  {\r\n    id: \"september\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"September\",\r\n  },\r\n  {\r\n    id: \"october\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"October\",\r\n  },\r\n  {\r\n    id: \"november\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"November\",\r\n  },\r\n  {\r\n    id: \"december\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"December\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    numeric: true,\r\n    disablePadding: false,\r\n    label: \"Total\",\r\n  },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const {\r\n    onSelectAllClick,\r\n    order,\r\n    orderBy,\r\n    numSelected,\r\n    rowCount,\r\n    onRequestSort,\r\n  } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n            color=\"primary\"\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{\r\n              \"aria-label\": \"select all expenses\",\r\n            }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? \"right\" : \"left\"}\r\n            padding={headCell.disablePadding ? \"none\" : \"normal\"}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            <TableSortLabel\r\n              active={orderBy === headCell.id}\r\n              direction={orderBy === headCell.id ? order : \"asc\"}\r\n              onClick={createSortHandler(headCell.id)}\r\n            >\r\n              {headCell.label}\r\n              {orderBy === headCell.id ? (\r\n                <Box component=\"span\" sx={visuallyHidden}>\r\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\r\n                </Box>\r\n              ) : null}\r\n            </TableSortLabel>\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      sx={{\r\n        pl: { sm: 2 },\r\n        pr: { xs: 1, sm: 1 },\r\n        ...(numSelected > 0 && {\r\n          bgcolor: (theme) =>\r\n            alpha(\r\n              theme.palette.primary.main,\r\n              theme.palette.action.activatedOpacity\r\n            ),\r\n        }),\r\n      }}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          color=\"inherit\"\r\n          variant=\"subtitle1\"\r\n          component=\"div\"\r\n        >\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography\r\n          sx={{ flex: \"1 1 100%\" }}\r\n          variant=\"h6\"\r\n          id=\"tableTitle\"\r\n          component=\"div\"\r\n        >\r\n          2021 Expenses\r\n        </Typography>\r\n      )}\r\n\r\n      {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton>\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst EnhancedTable = ({ createExpense, getExpenses, expenses }) => {\r\n  React.useEffect(() => {\r\n    getExpenses();\r\n  }, []);\r\n\r\n  const [order, setOrder] = React.useState(\"asc\");\r\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(30);\r\n\r\n  // all expenses where month is january and year is \"2021\"\r\n  const januaryExpenses = expenses.filter(\r\n    (expense) => expense.month === \"january\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is february and year is \"2021\"\r\n  const februaryExpenses = expenses.filter(\r\n    (expense) => expense.month === \"february\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is march and year is \"2021\"\r\n  const marchExpenses = expenses.filter(\r\n    (expense) => expense.month === \"march\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is april and year is \"2021\"\r\n  const aprilExpenses = expenses.filter(\r\n    (expense) => expense.month === \"april\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is may and year is \"2021\"\r\n  const mayExpenses = expenses.filter(\r\n    (expense) => expense.month === \"may\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is june and year is \"2021\"\r\n  const juneExpenses = expenses.filter(\r\n    (expense) => expense.month === \"june\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is july and year is \"2021\"\r\n  const julyExpenses = expenses.filter(\r\n    (expense) => expense.month === \"july\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is august and year is \"2021\"\r\n  const augustExpenses = expenses.filter(\r\n    (expense) => expense.month === \"august\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is september and year is \"2021\"\r\n  const septemberExpenses = expenses.filter(\r\n    (expense) => expense.month === \"september\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is october and year is \"2021\"\r\n  const octoberExpenses = expenses.filter(\r\n    (expense) => expense.month === \"october\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is november and year is \"2021\"\r\n  const novemberExpenses = expenses.filter(\r\n    (expense) => expense.month === \"november\" && expense.year === \"2021\"\r\n  );\r\n  // all expenses where month is december and year is \"2021\"\r\n  const decemberExpenses = expenses.filter(\r\n    (expense) => expense.month === \"december\" && expense.year === \"2021\"\r\n  );\r\n\r\n\r\n  // const salaryCost = salary.map((expense) => expense.cost);\r\n  // const salaryCostTotal = salaryCost.reduce((a, b) => a + b, 0);\r\n\r\n  const rows = [\r\n    createData(\r\n      \"Total\",\r\n      januaryExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      februaryExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      marchExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      aprilExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      mayExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      juneExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      julyExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      augustExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      septemberExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      octoberExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      novemberExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0),\r\n      decemberExpenses.reduce((acc, curr) => acc + curr.cost, 0).toFixed(0)\r\n    ),\r\n//#region january\r\n    createData(\r\n      \"Salary\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Salary\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Soc. Tax\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Soc. Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Income tax\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Income tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"VSAOI 23,59%\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VSAOI 23,59%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Raw Material\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Raw Material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Shipping\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Shipping\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Import Tax\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Import Tax\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"VAT 21%\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"VAT 21%\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Facebook adds\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Facebook adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Google Adds\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Google Adds\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Interest payment on loan\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Interest payment on loan\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Loan base payment\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Loan base payment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Car\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Car\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Accountancy\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Accountancy\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Rent\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Rent\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Security\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Security\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Web page maintanance\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Web page maintanance\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Phone\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Phone\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Omniva\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Omniva\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"DPD\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"DPD\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Equipment\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Equipment\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Side material\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Side material\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Kommisions\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Kommisions\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Gas\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Gas\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n    createData(\r\n      \"Other\",\r\n      januaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      februaryExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      marchExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      aprilExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      mayExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      juneExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      julyExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      augustExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      septemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      octoberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      novemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0),\r\n      decemberExpenses\r\n        .reduce((acc, curr) => {\r\n          if (curr.expenseName === \"Other\") {\r\n            return acc + curr.cost;\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, 0)\r\n        .toFixed(0)\r\n    ),\r\n  ];\r\n//#endregion\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === \"asc\";\r\n    setOrder(isAsc ? \"desc\" : \"asc\");\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.name);\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    setSelected([]);\r\n  };\r\n\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  // Avoid a layout jump when reaching the last page with empty rows.\r\n  const emptyRows =\r\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - rows.length) : 0;\r\n\r\n  const months = [\r\n    { label: \"january\" },\r\n    { label: \"february\" },\r\n    { label: \"march\" },\r\n    { label: \"april\" },\r\n    { label: \"may\" },\r\n    { label: \"june\" },\r\n    { label: \"july\" },\r\n    { label: \"august\" },\r\n    { label: \"september\" },\r\n    { label: \"october\" },\r\n    { label: \"november\" },\r\n    { label: \"december\" },\r\n  ];\r\n\r\n  const years = [\r\n    { label: \"2021\" },\r\n    { label: \"2022\" },\r\n    { label: \"2023\" },\r\n    { label: \"2024\" },\r\n    { label: \"2025\" },\r\n    { label: \"2026\" },\r\n    { label: \"2027\" },\r\n    { label: \"2028\" },\r\n    { label: \"2029\" },\r\n    { label: \"2030\" },\r\n  ];\r\n\r\n  //create const array of objects with label:Salary Income tax Soc. Tax\r\n  const expensesLabels = [\r\n    { label: \"Salary\" },\r\n    { label: \"Soc. Tax\" },\r\n    { label: \"Income tax\" },\r\n    { label: \"VSAOI 23,59%\" },\r\n    { label: \"Raw Material\" },\r\n    { label: \"Shipping\" },\r\n    { label: \"Import Tax\" },\r\n    { label: \"VAT 21%\" },\r\n    { label: \"Facebook adds\" },\r\n    { label: \"Google Adds\" },\r\n    { label: \"Interest payment on loan\" },\r\n    { label: \"Loan base payment\" },\r\n    { label: \"Car\" },\r\n    { label: \"Accountancy\" },\r\n    { label: \"Rent\" },\r\n    { label: \"Security\" },\r\n    { label: \"Web page maintanance\" },\r\n    { label: \"Phone\" },\r\n    { label: \"Omniva\" },\r\n    { label: \"DPD\" },\r\n    { label: \"Equipment\" },\r\n    { label: \"Side material\" },\r\n    { label: \"Kommisions\" },\r\n    { label: \"Gas\" },\r\n    { label: \"Other\" },\r\n  ];\r\n  const [formData, setFormData] = React.useState({\r\n    expenseName: \"\",\r\n    vat: true,\r\n    month: \"\",\r\n    year: \"\",\r\n    cost: 0,\r\n  });\r\n\r\n  const { expenseName, vat, month, year, cost } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.id.split(\"-\")[0]]: e.target.innerText,\r\n    });\r\n  };\r\n  const onChangeCost = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    createExpense(formData);\r\n  };\r\n  return (\r\n    <Box sx={{ width: \"100%\" }}>\r\n      <Paper sx={{ width: \"100%\", mb: 2 }}>\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            sx={{ minWidth: 750 }}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? \"small\" : \"medium\"}\r\n          >\r\n            <EnhancedTableHead\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {/* if you don't need to support IE11, you can replace the `stableSort` call with:\r\n                 rows.slice().sort(getComparator(order, orderBy)) */}\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      hover\r\n                      onClick={(event) => handleClick(event, row.name)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.name}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell padding=\"checkbox\">\r\n                        <Checkbox\r\n                          color=\"primary\"\r\n                          checked={isItemSelected}\r\n                          inputProps={{\r\n                            \"aria-labelledby\": labelId,\r\n                          }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell\r\n                        component=\"th\"\r\n                        id={labelId}\r\n                        scope=\"row\"\r\n                        padding=\"none\"\r\n                      >\r\n                        {row.name}\r\n                      </TableCell>\r\n                      <TableCell align=\"right\">{row.january}</TableCell>\r\n                      <TableCell align=\"right\">{row.february}</TableCell>\r\n                      <TableCell align=\"right\">{row.march}</TableCell>\r\n                      <TableCell align=\"right\">{row.april}</TableCell>\r\n                      <TableCell align=\"right\">{row.may}</TableCell>\r\n                      <TableCell align=\"right\">{row.june}</TableCell>\r\n                      <TableCell align=\"right\">{row.july}</TableCell>\r\n                      <TableCell align=\"right\">{row.august}</TableCell>\r\n                      <TableCell align=\"right\">{row.september}</TableCell>\r\n                      <TableCell align=\"right\">{row.october}</TableCell>\r\n                      <TableCell align=\"right\">{row.november}</TableCell>\r\n                      <TableCell align=\"right\">{row.december}</TableCell>\r\n                      <TableCell align=\"right\">{row.total}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow\r\n                  style={{\r\n                    height: (dense ? 33 : 53) * emptyRows,\r\n                  }}\r\n                >\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 30, 50]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n      <Box\r\n        component=\"form\"\r\n        sx={{\r\n          \"& .MuiTextField-root\": { m: 1, width: \"25ch\" },\r\n        }}\r\n        noValidate\r\n        autoComplete=\"on\"\r\n        onSubmit={(e) => onSubmit(e)}\r\n      >\r\n        <div>\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"expenseName\"\r\n            options={expensesLabels}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField\r\n                {...params}\r\n                label=\"Expence\"\r\n                name=\"expenseName\"\r\n                value={expenseName}\r\n              />\r\n            )}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <FormControlLabel\r\n            control={\r\n              <Checkbox\r\n                defaultChecked\r\n                onChange={() => {\r\n                  setFormData({\r\n                    ...formData,\r\n                    vat: !vat,\r\n                  });\r\n                }}\r\n              />\r\n            }\r\n            label=\"VAT 21%\"\r\n          />\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"month\"\r\n            options={months}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Month\" name=\"month\" value={month} />\r\n            )}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"year\"\r\n            options={years}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Year\" name=\"year\" value={year} />\r\n            )}\r\n            onChange={(e) => onChange(e)}\r\n          />\r\n          <TextField\r\n            id=\"cost\"\r\n            label=\"Number\"\r\n            type=\"number\"\r\n            name=\"cost\"\r\n            value={cost}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            onChange={(e) => onChangeCost(e)}\r\n          />\r\n          <Button type=\"submit\" variant=\"outlined\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n\r\nEnhancedTable.propTypes = {\r\n  createExpense: PropTypes.func.isRequired,\r\n  getExpenses: PropTypes.func.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  expenses: state.expenses.expenses,\r\n});\r\n\r\nexport default connect(mapStateToProps, { createExpense, getExpenses })(\r\n  EnhancedTable\r\n);\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\actions\\expenses.js",[],"D:\\Code Projects\\2020\\Zen\\client1\\src\\reducers\\expenses.js",["168"],"import { GET_EXPENSES, CREATE_EXPENSE, EXPENSE_ERROR } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  expenses: [{ name: \"1\", vat: true, month: \"test\", year: \"\", cost: 0 }],\r\n\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_EXPENSES:\r\n      return {\r\n        ...state,\r\n        expenses: payload,\r\n      };\r\n    case CREATE_EXPENSE:\r\n      return {\r\n        ...state,\r\n        expenses: payload,\r\n      };\r\n    case EXPENSE_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesYearlyOverview.js",["169"],"import React, { Fragment } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport PointOfSaleIcon from \"@mui/icons-material/PointOfSale\";\r\nimport MonetizationOnIcon from \"@mui/icons-material/MonetizationOn\";\r\nimport SavingsIcon from \"@mui/icons-material/Savings\";\r\nconst SalesYearlyOverview = ({ stats }) => {\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  return (\r\n    <Fragment>\r\n      \r\n      <Grid item xs={12} sm={4}>\r\n        <Item>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>Sales This Year</Item>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <PointOfSaleIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Products Sold\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 52 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.data.productCount}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AttachMoneyIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Revenue\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.data.sum.toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <SavingsIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Profit\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.data.totalNet.toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12}\r\n                sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <MonetizationOnIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Costs\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {(stats.data.totalExpenses + stats.data.costOfGoodsSold).toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Item>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SalesYearlyOverview;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\SalesMonthlyOverview.js",["170"],"import React, { Fragment } from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport Button from \"@mui/material/Button\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport AttachMoneyIcon from \"@mui/icons-material/AttachMoney\";\r\nimport PointOfSaleIcon from '@mui/icons-material/PointOfSale';\r\nimport MonetizationOnIcon from '@mui/icons-material/MonetizationOn';\r\nimport SavingsIcon from '@mui/icons-material/Savings';\r\nconst SalesMonthlyOverview = ({ stats }) => {\r\n  const Item = styled(Paper)(({ theme }) => ({\r\n    ...theme.typography.body2,\r\n    padding: theme.spacing(1),\r\n    textAlign: \"center\",\r\n    color: theme.palette.text.secondary,\r\n  }));\r\n\r\n  return (\r\n    <Fragment>\r\n      <Grid item xs={0} sm={2}>\r\n        {\" \"}\r\n      </Grid>\r\n      <Grid item xs={12} sm={4}>\r\n        <Item>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12}>\r\n              <Item>Sales This Month</Item>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <PointOfSaleIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Products Sold\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 52 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                   {stats.data.productCount}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <AttachMoneyIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Revenue\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                    {stats.data.sum.toFixed(2)+stats.data.shipping.toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <SavingsIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Profit\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                        {stats.data.totalNet.toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n            <Grid container item xs={12} sm={6} direction=\"row\">\r\n              <Grid\r\n                container\r\n                item\r\n                xs={12} sm={6}\r\n                direction=\"row\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n              >\r\n                <Typography variant=\"h1\" component=\"div\">\r\n                  <MonetizationOnIcon sx={{ fontSize: 64 }} />\r\n                </Typography>\r\n              </Grid>\r\n              <Grid item xs={6}>\r\n                <CardContent>\r\n                  <Typography\r\n                  \r\n                    sx={{ fontSize: 14 }}\r\n                    color=\"text.secondary\"\r\n                    gutterBottom\r\n                  >\r\n                    Total Costs\r\n                  </Typography>\r\n\r\n                  <Typography\r\n                    sx={{ mb: 1.5, fontSize: 36 }}\r\n                    color=\"text.secondary\"\r\n                  >\r\n                     {(stats.data.totalExpenses + stats.data.costOfGoodsSold).toFixed(2)}\r\n                  </Typography>\r\n                </CardContent>\r\n                <CardActions>\r\n                  <Button size=\"small\">Learn More</Button>\r\n                </CardActions>\r\n              </Grid>\r\n            </Grid>\r\n          </Grid>\r\n        </Item>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SalesMonthlyOverview;\r\n","D:\\Code Projects\\2020\\Zen\\client1\\src\\components\\Movements.js",["171","172","173","174"],"import React, {  useEffect , useState, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getStock } from \"../actions/stock\";\r\n\r\n\r\nimport { styled } from \"@mui/material/styles\";\r\n\r\n\r\n\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Box from \"@mui/material/Box\";\r\nimport Paper from \"@mui/material/Paper\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\n\r\nconst Movements = ({stock, getStock}) => {\r\n\r\n  const warehouses = [\r\n    { label: \"Ganibu Dambis 40C\" },\r\n    { label: \"Omniva\" },\r\n    { label: \"DPD\" },\r\n    { label: \"Home\" },\r\n  ];\r\n  useEffect(()=> {\r\n      getStock()\r\n  }, [])\r\n\r\n  //list all product models from stock  const product = [{ label: stock.model}] key productId\r\n    const product = stock.map((p, _id) => ({ label: p.model }));\r\n\r\n  return (\r\n    <Fragment>\r\n      <Box sx={{ flex: 1 }}>\r\n        <Grid container spacing={1} justifyContent=\"center\" alignItems=\"center\">\r\n            From\r\n          <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={warehouses}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"From Warehouse\" />\r\n            )}\r\n          />\r\n   {' '}  To  {' '}\r\n<Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={warehouses}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"To Warehouse\" />\r\n            )}\r\n          />\r\n        </Grid>\r\n        <Autocomplete\r\n            disablePortal\r\n            id=\"combo-box-demo\"\r\n            options={product}\r\n            sx={{ width: 300 }}\r\n            renderInput={(params) => (\r\n              <TextField {...params} label=\"Product\" />\r\n            )}\r\n          />\r\n      </Box>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMovements.propTypes = {\r\n    getStock: PropTypes.func.isRequired,\r\n  stock: PropTypes.array.isRequired,\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  stock: state.stock.stock,\r\n});\r\n\r\nexport default connect(mapStateToProps, { getStock })(Movements);\r\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":3,"column":35,"nodeType":"181","messageId":"182","endLine":3,"endColumn":41},{"ruleId":"179","severity":1,"message":"183","line":15,"column":20,"nodeType":"181","messageId":"182","endLine":15,"endColumn":29},{"ruleId":"179","severity":1,"message":"184","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":25},{"ruleId":"179","severity":1,"message":"185","line":1,"column":17,"nodeType":"181","messageId":"182","endLine":1,"endColumn":26},{"ruleId":"179","severity":1,"message":"184","line":1,"column":28,"nodeType":"181","messageId":"182","endLine":1,"endColumn":36},{"ruleId":"179","severity":1,"message":"186","line":1,"column":49,"nodeType":"181","messageId":"182","endLine":1,"endColumn":57},{"ruleId":"179","severity":1,"message":"187","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":14},{"ruleId":"179","severity":1,"message":"188","line":9,"column":8,"nodeType":"181","messageId":"182","endLine":9,"endColumn":13},{"ruleId":"189","severity":1,"message":"190","line":18,"column":6,"nodeType":"191","endLine":18,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":24,"column":1,"nodeType":"195","endLine":57,"endColumn":2},{"ruleId":"179","severity":1,"message":"196","line":7,"column":12,"nodeType":"181","messageId":"182","endLine":7,"endColumn":24},{"ruleId":"189","severity":1,"message":"197","line":12,"column":6,"nodeType":"191","endLine":12,"endColumn":8,"suggestions":"198"},{"ruleId":"193","severity":1,"message":"194","line":31,"column":1,"nodeType":"195","endLine":53,"endColumn":2},{"ruleId":"175","replacedBy":"199"},{"ruleId":"177","replacedBy":"200"},{"ruleId":"179","severity":1,"message":"201","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":15},{"ruleId":"179","severity":1,"message":"201","line":3,"column":8,"nodeType":"181","messageId":"182","endLine":3,"endColumn":15},{"ruleId":"179","severity":1,"message":"186","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":24},{"ruleId":"179","severity":1,"message":"202","line":1,"column":26,"nodeType":"181","messageId":"182","endLine":1,"endColumn":35},{"ruleId":"179","severity":1,"message":"203","line":47,"column":15,"nodeType":"181","messageId":"182","endLine":47,"endColumn":20},{"ruleId":"179","severity":1,"message":"186","line":1,"column":16,"nodeType":"181","messageId":"182","endLine":1,"endColumn":24},{"ruleId":"179","severity":1,"message":"202","line":1,"column":26,"nodeType":"181","messageId":"182","endLine":1,"endColumn":35},{"ruleId":"179","severity":1,"message":"203","line":40,"column":15,"nodeType":"181","messageId":"182","endLine":40,"endColumn":20},{"ruleId":"204","severity":1,"message":"205","line":34,"column":25,"nodeType":"206","endLine":34,"endColumn":48},{"ruleId":"179","severity":1,"message":"207","line":2,"column":10,"nodeType":"181","messageId":"182","endLine":2,"endColumn":16},{"ruleId":"179","severity":1,"message":"208","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":13},{"ruleId":"179","severity":1,"message":"209","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":12},{"ruleId":"179","severity":1,"message":"209","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":12},{"ruleId":"179","severity":1,"message":"210","line":11,"column":8,"nodeType":"181","messageId":"182","endLine":11,"endColumn":23},{"ruleId":"189","severity":1,"message":"211","line":303,"column":6,"nodeType":"191","endLine":303,"endColumn":8,"suggestions":"212"},{"ruleId":"193","severity":1,"message":"194","line":9,"column":1,"nodeType":"195","endLine":32,"endColumn":2},{"ruleId":"179","severity":1,"message":"209","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":12},{"ruleId":"179","severity":1,"message":"209","line":5,"column":8,"nodeType":"181","messageId":"182","endLine":5,"endColumn":12},{"ruleId":"179","severity":1,"message":"186","line":1,"column":30,"nodeType":"181","messageId":"182","endLine":1,"endColumn":38},{"ruleId":"179","severity":1,"message":"207","line":7,"column":10,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"208","line":13,"column":8,"nodeType":"181","messageId":"182","endLine":13,"endColumn":13},{"ruleId":"189","severity":1,"message":"213","line":27,"column":6,"nodeType":"191","endLine":27,"endColumn":8,"suggestions":"214"},"no-native-reassign",["215"],"no-negated-in-lhs",["216"],"no-unused-vars","'Switch' is defined but never used.","Identifier","unusedVar","'getTotals' is defined but never used.","'Fragment' is defined but never used.","'Component' is defined but never used.","'useState' is defined but never used.","'Link' is defined but never used.","'stock' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getStats' and 'getTotals'. Either include them or remove the dependency array. If 'getTotals' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["217"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'uploadedFile' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'getOrders'. Either include it or remove the dependency array. If 'getOrders' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["218"],["215"],["216"],"'Invoice' is defined but never used.","'useEffect' is defined but never used.","'total' is assigned a value but never used.","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'styled' is defined but never used.","'Paper' is defined but never used.","'Card' is defined but never used.","'PointOfSaleIcon' is defined but never used.","React Hook React.useEffect has a missing dependency: 'getExpenses'. Either include it or remove the dependency array. If 'getExpenses' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["219"],"React Hook useEffect has a missing dependency: 'getStock'. Either include it or remove the dependency array. If 'getStock' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["220"],"no-global-assign","no-unsafe-negation",{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [getStats, getTotals]",{"range":"229","text":"230"},"Update the dependencies array to be: [getOrders]",{"range":"231","text":"232"},"Update the dependencies array to be: [getExpenses]",{"range":"233","text":"234"},"Update the dependencies array to be: [getStock]",{"range":"235","text":"236"},[654,656],"[getStats, getTotals]",[372,374],"[getOrders]",[7353,7355],"[getExpenses]",[703,705],"[getStock]"]